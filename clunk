#!/usr/bin/perl

use strict;
use warnings;

use lib 'lib';

use 5.010001;
use Getopt::Long 2.38 ();
use App::Ack::ConfigLoader ();


Getopt::Long::Configure( 'bundling', 'no_ignore_case' );



my $options_used = options_used();
{use Data::Dumper; local $Data::Dumper::Sortkeys=1; local $Data::Dumper::Trailingcomma=1; warn Dumper( $options_used )}

say 'After processing, @ARGV is:';
say for @ARGV;

# Processes the command line option and returns a hash of the options that were
# used on the command line, using their full name.  "--prox" shows up in the hash as "--proximate".

sub options_used {
    local @ARGV = @ARGV;

    # We don't care about the hashes passed in to get_arg_spec().
    my $real_spec = App::Ack::ConfigLoader::get_arg_spec( {}, {} );

    # Go through the specs and change them to just set a value in a hash.
    # We don't want it to take action, only to note that the argument appeared.
    my $seen;
    my $hashifying_spec = {};
    for my $spec ( sort keys %{$real_spec} ) {
        $hashifying_spec->{$spec} = sub { ++$seen->{+shift} };
    }

    # Process the arguments, which has no effect and reads through our local @ARGV copy.
    Getopt::Long::GetOptions( %{$hashifying_spec} );

    return $seen;
}

